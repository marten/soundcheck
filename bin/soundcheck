#!/usr/bin/env ruby
require 'optparse'
require 'pty'
require 'soundcheck'

options = {}
option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: soundcheck [options] [file or path]"

  opts.on("--fast", "Run fast specs only") do
    options[:fast] = true
  end

  opts.on("--trace", "Shows backtrace") do
    options[:trace] = true
  end

  opts.on("-v", "--verbose", "Shows debug information about language/test-framework detection") do
    options[:verbose] = true
  end

  opts.on("--help", "Show this info") do
    puts opts
    exit
  end
end

# Option Parser will eat elements of ARGV that it recognizes
option_parser.parse!(ARGV)

# Assume that the rest of ARGV are filenames
soundcheck = Soundcheck.new(ARGV, options)

begin
  exit_status = 0
  soundcheck.commands_to_run.each do |cmd|
    puts "[1mExecuting #{cmd}[0m\n\n"

    PTY.spawn(cmd) do |read_stream, write_stream, pid|
      begin
        while chars = read_stream.read(1)
          print chars
        end
      rescue Errno::EIO
      end
      Process.wait(pid)
    end
    puts "\n\n\n"

    if $?
      exit_status = $?.exitstatus if $?.exitstatus > exit_status
    else
      puts "Huh?! We didn't get an exit status from that last one."
      exit 1
    end
  end

  exit exit_status
rescue Project::UnknownLanguage
  puts "Error: Cannot detect the programming language for this project."
  exit 1
rescue Project::UnknownFramework
  puts "Error: Cannot detect the test framework for this project."
  exit 1
end
